openapi: 3.0.1
info:
  description: Api para pedir informacion de los platos de un restaurante
  version: 1.0.0
  title: Delilah Rest√≥
servers:
- url: http://localhost:3000/v1/
tags:
- name: singUp
  description: crear nuevo usuario
- name: login
  description: registro de usuaurios



paths: 

  /: 
    post:
      tags: 
      - singUp
      summary: para crear un nuevo usuario
      parameters:
      - $ref: '#/components/parameters/token'
      requestBody:
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/BodyLogueoPost'
        required: true
      responses:
        200:
          description: ok
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/ResponseLogueo'
        400:
          $ref: '#/components/responses/Unauthorized'
    
  /{idCliente}:
    get:
      tags:
      - login
      summary: para saber si el usuario ya esta registrado 
      parameters:
      - $ref: '#/components/parameters/token'
      - name: idCliente
        in: path
        description: id del cliente
        schema:
          type: string
        required: true
          
      responses:
        200:
          description: usuario encontrado con exito
          content:
            aplication/json:
              schema:
                $ref: '#/components/schemas/ResponseLogueoGet'
        400:
          $ref: '#/components/responses/Unauthorized'
            
components: 
  responses:
    Unauthorized:
      description: no autorizado
  
  parameters:
    token: 
      name: token
      schema:
        type: string
      in: header
      description: token de autenticacion d 
      required: true
  
  schemas:
    BodyLogueoPost:
      type: object
      properties:
        correo:
          type: string
          description: correo del usuario
          
    ResponseLogueo:
      type: object
      properties:
        status:
          type: string
          description: si fue exitosa o no la peticion
        status_code:
          type: integer
          description: codigo de estado
        data:
          type: object
          description: mensaje de respuesta con la informacion
          properties:
            id:
              type: integer
              description: id usuario creado
    
    ResponseLogueoGet:
      type: object
      properties:
        status:
          type: string
          description: si fue exitosa o no la peticion
        status_code:
          type: integer
          description: codigo de estado
        data:
          type: object
          description: mensaje de respuesta con la informacion
          properties:
            correo:
              type: integer
              description: id usuario creado
      